# docker-compose.yaml

services:
  redis-service:
    image: "redis:7.0.10-bullseye"
    networks:
      - backend-network
    volumes:
      - "redis-volume:/data"
  web-service:
    build: ./page-tracker
    ports:
      - "8080:8080"
    environment:
      REDIS_URL: "redis://redis-service:6379"
    networks:
      - backend-network
    depends_on:
      - redis-service
    command: "gunicorn page_tracker.app:app --bind 0.0.0.0:8080" # This command will take precedence over the Dockerfile command
  
  # use profiles to run an  e2e (end to end) test service conditionally.
  test-service:
    profiles:
      - testing
    build:
      context: ./page-tracker
      dockerfile: Dockerfile #Dockerfile.dev -- must specify dockerfile name if not the default Dockerfile
    environment:
      REDIS_URL: "redis://redis-service:6379"
      FLASK_URL: "http://web-service:8080"
    networks:
      - backend-network
    depends_on:
      - redis-service
      - web-service
    command: > # need to change directory because the mount is in src/
      sh -c 'pwd && cd /home/realpython &&
      python -m pytest test/e2e/ -vv
      --redis-url=$$REDIS_URL
      --flask-url=$$FLASK_URL'
      

networks:
    backend-network:

volumes:
  redis-volume:

# Line 10-19: specifies the folder with the Dockerfile to build the image,
#             configure web-service by specifying the folder with a Dockerfile to build, the ports to expose, 
#             the environment variables to set, and the networks to connect to. 
#             The depends_on statement requires redis-service to be available before web-service can start.

